diff --git a/shaker/engine/config.py b/shaker/engine/config.py
index b47598b..6eddca4 100644
--- a/shaker/engine/config.py
+++ b/shaker/engine/config.py
@@ -166,6 +166,9 @@ OPENSTACK_OPTS = [
                 default=(utils.env('SHAKER_CLEANUP_ON_ERROR') or True),
                 help='Clean up the heat-stack upon any error occurred during '
                      'scenario execution.'),
+    cfg.IntOpt('custom-contrail-asn',
+               default='64512',
+               help='Contrail Autonomous System Number.'),
 
 ]
 
diff --git a/shaker/engine/executors/iperf.py b/shaker/engine/executors/iperf.py
index 7dbceae..c328919 100644
--- a/shaker/engine/executors/iperf.py
+++ b/shaker/engine/executors/iperf.py
@@ -35,7 +35,15 @@ def add_common_iperf_params(cmd, executor):
             cmd.add('--len', executor.test_definition.get('datagram_size'))
     if executor.test_definition.get('bandwidth') is not None:
         cmd.add('--bandwidth', executor.test_definition.get('bandwidth'))
-    cmd.add('--time', executor.get_expected_duration())
+    if executor.test_definition.get('flags'):
+        flags = executor.test_definition.get('flags').replace(
+            "$SLAVE_IP", executor.agent['slave']['ip'])
+        for flag in str(flags).split(' '):
+            cmd.add(str(flag))
+    mutually_exclusive = {"-k", "--blockcount", "-n", "--num", "-l",
+                          "--length"}
+    if mutually_exclusive.isdisjoint(cmd.tokens):
+        cmd.add('--time', executor.get_expected_duration())
     cmd.add('--parallel', executor.test_definition.get('threads') or 1)
     if executor.test_definition.get('interval'):
         cmd.add('--interval', executor.test_definition.get('interval'))
diff --git a/shaker/resources/report_templates/interactive.html b/shaker/resources/report_templates/interactive.html
index dd04bda..9382bc9 100644
--- a/shaker/resources/report_templates/interactive.html
+++ b/shaker/resources/report_templates/interactive.html
@@ -451,6 +451,13 @@
       parseUrlToState();
       console.log(state);
 
+      // change the status of tests that have sla failures
+      // to "fail", only if they were previously marked "ok"
+      $.each(report.sla, function(_i, sla) {
+        if (sla.state == "FAIL" && report.records[sla.record].status == "ok") {
+          report.records[sla.record].status = "fail";
+        }
+      });
       // pre-process records
       $.each(report.records, function(_i, record) {
         if (record.status) {
@@ -458,6 +465,7 @@
           record["is_status_lost"] = record.status == "lost";
           record["is_status_interrupted"] = record.status == "interrupted";
           record["is_status_error"] = record.status == "error";
+          record["is_status_fail"] = record.status == "fail";
         }
       });
 
@@ -545,6 +553,7 @@
   {{#if is_status_lost}}<span class="label label-danger"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span>lost</span>{{/if}}
   {{#if is_status_interrupted}}<span class="label label-warning"><span class="glyphicon glyphicon-stop" aria-hidden="true"></span>interrupted</span>{{/if}}
   {{#if is_status_error}}<span class="label label-danger"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span>error</span>{{/if}}
+  {{#if is_status_fail}}<span class="label label-danger"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span>sla fail</span>{{/if}}
   {{#if stats_yaml}}
     <h4>Stats</h4>
     <pre>{{ stats_yaml }}</pre>
@@ -639,6 +648,12 @@
             error
           </span>
         {{/if}}
+        {{#if is_status_fail }}
+          <span class="label label-danger">
+            <span class="glyphicon glyphicon-alert" aria-hidden="true"></span>
+            sla fail
+          </span>
+        {{/if}}
       </td>
     </tr>
     {{/records}}
