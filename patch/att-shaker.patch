diff --git a/shaker/engine/config.py b/shaker/engine/config.py
index af06d0c..33fb0cc 100644
--- a/shaker/engine/config.py
+++ b/shaker/engine/config.py
@@ -166,6 +166,9 @@ OPENSTACK_OPTS = [
                 default=(utils.env('SHAKER_CLEANUP_ON_ERROR') or True),
                 help='Clean up the heat-stack upon any error occurred during '
                      'scenario execution.'),
+    cfg.IntOpt('custom-contrail-asn',
+               default='64512',
+               help='Contrail Autonomous System Number.'),
 
 ]
 
diff --git a/shaker/engine/deploy.py b/shaker/engine/deploy.py
index a4ca56d..e0eb013 100644
--- a/shaker/engine/deploy.py
+++ b/shaker/engine/deploy.py
@@ -16,6 +16,8 @@
 import collections
 import functools
 import random
+import sys
+import time
 
 import jinja2
 from oslo_config import cfg
@@ -232,6 +234,7 @@ class Deployment(object):
         self.openstack_client = None
         self.has_stack = False
         self.privileged_mode = True
+        self.support_stacks = []
 
     def connect_to_openstack(self, openstack_params, flavor_name, image_name,
                              external_net, dns_nameservers):
@@ -302,6 +305,30 @@ class Deployment(object):
             exit(1)
         merged_parameters.update(specification.get('template_parameters', {}))
 
+        env_file = specification.get('env_file', None)
+        if env_file is not None:
+            merged_parameters.update(
+                self._render_env_template(env_file, base_dir))
+
+        supporting_templates = specification.get('supporting_templates', None)
+        if supporting_templates is not None:
+            for template in supporting_templates:
+                for k, v in template.items():
+                    try:
+                        support_name = v['name']
+                        heat.create_stack(
+                            self.openstack_client.heat, support_name,
+                            utils.read_file(v['file'], base_dir=base_dir),
+                            self._render_env_template(v['env'], base_dir))
+
+                        # track support stacks for cleanup
+                        self.support_stacks.append(support_name)
+
+                    except heat.exc.Conflict as err:
+                        # continue if support stack already exists
+                        LOG.info('Ignoring stack exists errors: %s', err)
+                        sys.exc_clear()
+
         self.has_stack = True
         stack_id = heat.create_stack(
             self.openstack_client.heat, self.stack_name, rendered_template,
@@ -330,6 +357,20 @@ class Deployment(object):
                 return functools.partial(override_ip,
                                          ip_type=override_spec.get('ip'))
 
+    # ol7435 method to translate jinja decorations in env files
+    def _render_env_template(self, env_file, base_dir):
+        env_template = utils.read_file(env_file,
+                                       base_dir=base_dir)
+        env_values = {
+            'CONF': cfg.CONF
+        }
+        compiled_env = jinja2.Template(env_template)
+        rendered_env = compiled_env.render(env_values)
+
+        env_parameters = utils.read_yaml(rendered_env)
+
+        return env_parameters['parameters']
+
     def deploy(self, deployment, base_dir=None, server_endpoint=None):
         agents = {}
 
@@ -355,6 +396,20 @@ class Deployment(object):
         return agents
 
     def cleanup(self):
+        wait = 15
+
         if self.has_stack and cfg.CONF.cleanup_on_error:
             LOG.debug('Cleaning up the stack: %s', self.stack_name)
             self.openstack_client.heat.stacks.delete(self.stack_name)
+            time.sleep(wait)
+
+        # ol7435 cleanup support stacks
+        # remove any possible duplicates from the support_stack list and
+        # reverse the order in order to prevent deletion errors due to
+        # dependencies
+        stack_set = list(set(self.support_stacks))[::-1]
+        if len(stack_set) > 0 and cfg.CONF.cleanup_on_error:
+            for stack in stack_set:
+                LOG.debug('Cleaning up the support stack: %s', stack)
+                self.openstack_client.heat.stacks.delete(stack)
+                time.sleep(wait)
diff --git a/shaker/engine/executors/iperf.py b/shaker/engine/executors/iperf.py
index 7dbceae..c328919 100644
--- a/shaker/engine/executors/iperf.py
+++ b/shaker/engine/executors/iperf.py
@@ -35,7 +35,15 @@ def add_common_iperf_params(cmd, executor):
             cmd.add('--len', executor.test_definition.get('datagram_size'))
     if executor.test_definition.get('bandwidth') is not None:
         cmd.add('--bandwidth', executor.test_definition.get('bandwidth'))
-    cmd.add('--time', executor.get_expected_duration())
+    if executor.test_definition.get('flags'):
+        flags = executor.test_definition.get('flags').replace(
+            "$SLAVE_IP", executor.agent['slave']['ip'])
+        for flag in str(flags).split(' '):
+            cmd.add(str(flag))
+    mutually_exclusive = {"-k", "--blockcount", "-n", "--num", "-l",
+                          "--length"}
+    if mutually_exclusive.isdisjoint(cmd.tokens):
+        cmd.add('--time', executor.get_expected_duration())
     cmd.add('--parallel', executor.test_definition.get('threads') or 1)
     if executor.test_definition.get('interval'):
         cmd.add('--interval', executor.test_definition.get('interval'))
diff --git a/shaker/engine/utils.py b/shaker/engine/utils.py
index 0b226c5..a8d5003 100644
--- a/shaker/engine/utils.py
+++ b/shaker/engine/utils.py
@@ -134,8 +134,8 @@ def write_file(data, file_name, base_dir=''):
             fd.close()
 
 
-def read_yaml_file(file_name):
-    raw = read_file(file_name)
+def read_yaml_file(file_name, base_dir=''):
+    raw = read_file(file_name, base_dir=base_dir)
     try:
         parsed = yaml.safe_load(raw)
         return parsed
@@ -145,6 +145,16 @@ def read_yaml_file(file_name):
         raise
 
 
+def read_yaml(raw):
+    try:
+        parsed = yaml.safe_load(raw)
+        return parsed
+    except Exception as e:
+        LOG.error('Failed to parse input %(yaml)s in YAML format: %(err)s',
+                  dict(yaml=raw, err=e))
+        raise
+
+
 def split_address(address):
     try:
         host, port = address.split(':')
diff --git a/shaker/resources/report_templates/interactive.html b/shaker/resources/report_templates/interactive.html
index dd04bda..9382bc9 100644
--- a/shaker/resources/report_templates/interactive.html
+++ b/shaker/resources/report_templates/interactive.html
@@ -451,6 +451,13 @@
       parseUrlToState();
       console.log(state);
 
+      // change the status of tests that have sla failures
+      // to "fail", only if they were previously marked "ok"
+      $.each(report.sla, function(_i, sla) {
+        if (sla.state == "FAIL" && report.records[sla.record].status == "ok") {
+          report.records[sla.record].status = "fail";
+        }
+      });
       // pre-process records
       $.each(report.records, function(_i, record) {
         if (record.status) {
@@ -458,6 +465,7 @@
           record["is_status_lost"] = record.status == "lost";
           record["is_status_interrupted"] = record.status == "interrupted";
           record["is_status_error"] = record.status == "error";
+          record["is_status_fail"] = record.status == "fail";
         }
       });
 
@@ -545,6 +553,7 @@
   {{#if is_status_lost}}<span class="label label-danger"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span>lost</span>{{/if}}
   {{#if is_status_interrupted}}<span class="label label-warning"><span class="glyphicon glyphicon-stop" aria-hidden="true"></span>interrupted</span>{{/if}}
   {{#if is_status_error}}<span class="label label-danger"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span>error</span>{{/if}}
+  {{#if is_status_fail}}<span class="label label-danger"><span class="glyphicon glyphicon-alert" aria-hidden="true"></span>sla fail</span>{{/if}}
   {{#if stats_yaml}}
     <h4>Stats</h4>
     <pre>{{ stats_yaml }}</pre>
@@ -639,6 +648,12 @@
             error
           </span>
         {{/if}}
+        {{#if is_status_fail }}
+          <span class="label label-danger">
+            <span class="glyphicon glyphicon-alert" aria-hidden="true"></span>
+            sla fail
+          </span>
+        {{/if}}
       </td>
     </tr>
     {{/records}}
diff --git a/shaker/resources/schemas/scenario.yaml b/shaker/resources/schemas/scenario.yaml
index 4630721..fd179d1 100644
--- a/shaker/resources/schemas/scenario.yaml
+++ b/shaker/resources/schemas/scenario.yaml
@@ -9,8 +9,24 @@ mapping:
   deployment:
     type: map
     mapping:
+      supporting_templates:
+        type: seq
+        sequence:
+          - type: map
+            mapping:
+              template:
+                type: map
+                mapping:
+                  file:
+                    type: str
+                  env:
+                    type: str
+                  name:
+                    type: str
       template:
         type: str
+      env_file:
+        type: str
       agents:
         type: any
       accommodation:
